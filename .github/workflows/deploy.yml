name: Deploy

on:
  push:
    paths:
      - 'version/version.go'
jobs:
  deploy:
    name: Build and Deploy
    # only build/deploy for beta and master branches
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/beta'
    runs-on: ubuntu-22.04
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker Build Master and Push
        # If pushing to the master branch, we want to correctly tag the builds
        # in docker-hub with the new master makefile command
        if: github.ref == 'refs/heads/master'
        run: make container-build-master
      - name: Docker Build Beta and Push
        # If pushing to the beta branch, we want to correctly tag the builds
        # in docker-hub with the new beta makefile command
        if: github.ref == 'refs/heads/beta'
        run: make container-build-beta

  helmRelease:
    name: Cut Helm Release when Updated
    needs: deploy
    runs-on: ubuntu-latest
    # Only cut release if pushing to master
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.1.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  slackFinish:
    name: Notify Finish
    needs: helmRelease
    runs-on: ubuntu-22.04
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: 8398a7/action-slack@v3
        with:
          fields: repo,message,commit,author,action,eventName,ref,workflow
          status: ${{ env.WORKFLOW_CONCLUSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}


