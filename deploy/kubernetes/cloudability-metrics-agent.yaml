apiVersion: v1
kind: Namespace
metadata:
  name: cloudability
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudability
  namespace: cloudability
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-agents
  namespace: kube-system
rules:
- apiGroups:
  - ""
  - "extensions"
  - "apps"
  - "batch"
  resources:
    - "namespaces"
    - "replicationcontrollers"
    - "services"
    - "nodes"
    - "nodes/spec"
    - "pods"
    - "jobs"
    - "cronjobs"
    - "persistentvolumes"
    - "persistentvolumeclaims"
    - "deployments"
    - "replicasets"
    - "daemonsets"
  verbs:
    - "get"
    - "watch"
    - "list"
- apiGroups: [""]
  resources:
    - "services/proxy"
    - "pods/proxy"
    - "nodes/proxy"
    - "nodes/stats"
    - "nodes/metrics"
  verbs:
    - "get"
    - "list"
    - "create"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metrics-agents
  namespace: kube-system
subjects:
- kind: ServiceAccount
  name: cloudability
  namespace: cloudability
roleRef:
  kind: ClusterRole
  name: metrics-agents
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: metrics-agents
  namespace: cloudability
rules:
- apiGroups: ["*"]
  resources:
    - "pods"
    - "pods/log"
  verbs:
    - "get"
    - "list"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: metrics-agents
  namespace: cloudability
subjects:
- kind: ServiceAccount
  name: cloudability
  namespace: cloudability
roleRef:
  kind: Role
  name: metrics-agents
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: "metrics-agent"
  name: "metrics-agent"
  namespace: cloudability
spec:
  selector:
    matchLabels:
      app: metrics-agent
  replicas: 1
  template:
    metadata:
      labels:
        app: metrics-agent
    spec:
      serviceAccount: "cloudability"
      containers:
        - image: cloudability/metrics-agent:latest
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
            capabilities:
              drop:
                - all
            allowPrivilegeEscalation: false
          resources:
            requests:
              memory: "2Gi"
              cpu: ".5"
            limits:
              memory: "4Gi"
              cpu: "1"
          livenessProbe:
            exec:
              command:
                - touch
                - tmp/healthy
            initialDelaySeconds: 120
            periodSeconds: 600
            timeoutSeconds: 5
          name: "metrics-agent"
          args:
            - 'kubernetes'
          env:
            - name: CLOUDABILITY_API_KEY
              value: "XXXXXXXXX"
            - name: CLOUDABILITY_CLUSTER_NAME
              value: "NNNNNNNNN"
            - name: CLOUDABILITY_POLL_INTERVAL
              value: "180"
